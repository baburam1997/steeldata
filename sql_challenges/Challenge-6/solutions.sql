--	1. How many transactions were completed during each marketing campaign?
SELECT 
	m.campaign_name, 
	COUNT(t.transaction_id) AS num_transactions
FROM 
	challenge_6.marketing_campaigns m
LEFT JOIN 
	challenge_6.transactions t 
		ON m.product_id = t.product_id
GROUP BY 
	m.campaign_name;

--	2. Which product had the highest sales quantity?
SELECT 
	product_name
FROM 
	challenge_6.sustainable_clothing
WHERE 
	product_id = (
				SELECT 
				  	product_id
				FROM 
					challenge_6.transactions
				GROUP BY 
					product_id
				ORDER BY 
					SUM(quantity) DESC
				LIMIT 1
				);

--	3. What is the total revenue generated from each marketing campaign?
SELECT 
	m.campaign_name, 
	SUM(sc.price * t.quantity) AS total_revenue
FROM 
	challenge_6.marketing_campaigns m
LEFT JOIN 
	challenge_6.transactions t 
		ON m.product_id = t.product_id
JOIN 
	challenge_6.sustainable_clothing sc 
		ON m.product_id = sc.product_id
GROUP BY 
	m.campaign_name;

--	4. What is the top-selling product category based on the total revenue generated?
SELECT 
	sc.category,
	SUM(sc.price * t.quantity) AS total_revenue
FROM 
	challenge_6.sustainable_clothing sc
JOIN 
	challenge_6.transactions t 
		ON sc.product_id = t.product_id
GROUP BY 
	sc.category
ORDER BY 
	total_revenue DESC
LIMIT 1;

--	5. Which products had a higher quantity sold compared to the average quantity sold?
SELECT 
	sc.product_name
FROM 
	challenge_6.sustainable_clothing sc
JOIN 
	challenge_6.transactions t 
		ON sc.product_id = t.product_id
GROUP BY 
	sc.product_name
HAVING 
	SUM(t.quantity) > (
					SELECT 
					  	AVG(quantity)
					FROM 
						challenge_6.transactions
					);

--	6. What is the average revenue generated per day during the marketing campaigns?
SELECT 
	m.campaign_name, 
		AVG(sc.price * t.quantity) AS average_daily_revenue
FROM 
	challenge_6.marketing_campaigns m
LEFT JOIN 
	challenge_6.transactions t 
		ON m.product_id = t.product_id
JOIN 
	challenge_6.sustainable_clothing sc 
		ON m.product_id = sc.product_id
GROUP BY 
	m.campaign_name;

--	7. What is the percentage contribution of each product to the total revenue?
SELECT 
	sc.product_name, 
	(SUM(sc.price * t.quantity) / total_revenue) * 100 AS percentage_contribution
FROM 
	challenge_6.sustainable_clothing sc
JOIN 
	challenge_6.transactions t 
		ON sc.product_id = t.product_id
CROSS JOIN 
	(SELECT 
		SUM(sc.price * t.quantity) AS total_revenue 
	FROM 
		challenge_6.sustainable_clothing sc 
	JOIN 
		challenge_6.transactions t 
			ON sc.product_id = t.product_id
	) tr
GROUP BY 
	sc.product_name, 
	total_revenue;

--	8. Compare the average quantity sold during marketing campaigns to outside the marketing campaigns
SELECT 
  CASE 
	  WHEN 
	  	m.campaign_name IS NOT NULL THEN 'Inside Campaign' 
	  	ELSE 
	  		'Outside Campaign' 
	  	END AS campaign_type,
  AVG(t.quantity) AS avg_quantity_sold
FROM 
  challenge_6.transactions t
LEFT JOIN 
  challenge_6.marketing_campaigns m 
    ON t.product_id = m.product_id
GROUP BY 
  campaign_type;

--	9. Compare the revenue generated by products inside the marketing campaigns to outside the campaigns
SELECT 
  CASE 
	  WHEN
	  	m.campaign_name IS NOT NULL THEN 'Inside Campaign' 
	  ELSE 
	  	'Outside Campaign' 
	  END AS campaign_type,
  SUM(sc.price * t.quantity) AS total_revenue
FROM 
  challenge_6.transactions t
LEFT JOIN 
  challenge_6.marketing_campaigns m 
    ON t.product_id = m.product_id
JOIN 
  challenge_6.sustainable_clothing sc 
    ON t.product_id = sc.product_id
GROUP BY 
  campaign_type;


--	10. Rank the products by their average daily quantity sold
SELECT 
	sc.product_name, 
	AVG(t.quantity) AS avg_daily_quantity_sold
FROM 
	challenge_6.sustainable_clothing sc
JOIN 
	challenge_6.transactions t 
		ON sc.product_id = t.product_id
GROUP BY 
	sc.product_name
ORDER BY 
	avg_daily_quantity_sold DESC;

